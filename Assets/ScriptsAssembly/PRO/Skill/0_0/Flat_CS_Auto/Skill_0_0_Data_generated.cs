// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PRO.Skill.Flat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Skill_0_0_Record : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Skill_0_0_Record GetRootAsSkill_0_0_Record(ByteBuffer _bb) { return GetRootAsSkill_0_0_Record(_bb, new Skill_0_0_Record()); }
  public static Skill_0_0_Record GetRootAsSkill_0_0_Record(ByteBuffer _bb, Skill_0_0_Record obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Skill_0_0_Record __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Time { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<PRO.Skill.Flat.Skill_0_0_Record> CreateSkill_0_0_Record(FlatBufferBuilder builder,
      float time = 0.0f) {
    builder.StartTable(1);
    Skill_0_0_Record.AddTime(builder, time);
    return Skill_0_0_Record.EndSkill_0_0_Record(builder);
  }

  public static void StartSkill_0_0_Record(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTime(FlatBufferBuilder builder, float time) { builder.AddFloat(0, time, 0.0f); }
  public static Offset<PRO.Skill.Flat.Skill_0_0_Record> EndSkill_0_0_Record(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PRO.Skill.Flat.Skill_0_0_Record>(o);
  }
}


static public class Skill_0_0_RecordVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Time*/, 4 /*float*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct Skill_0_0_Disk : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Skill_0_0_Disk GetRootAsSkill_0_0_Disk(ByteBuffer _bb) { return GetRootAsSkill_0_0_Disk(_bb, new Skill_0_0_Disk()); }
  public static Skill_0_0_Disk GetRootAsSkill_0_0_Disk(ByteBuffer _bb, Skill_0_0_Disk obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Skill_0_0_Disk __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Time { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<PRO.Skill.Flat.Skill_0_0_Disk> CreateSkill_0_0_Disk(FlatBufferBuilder builder,
      float time = 0.0f) {
    builder.StartTable(1);
    Skill_0_0_Disk.AddTime(builder, time);
    return Skill_0_0_Disk.EndSkill_0_0_Disk(builder);
  }

  public static void StartSkill_0_0_Disk(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTime(FlatBufferBuilder builder, float time) { builder.AddFloat(0, time, 0.0f); }
  public static Offset<PRO.Skill.Flat.Skill_0_0_Disk> EndSkill_0_0_Disk(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PRO.Skill.Flat.Skill_0_0_Disk>(o);
  }
}


static public class Skill_0_0_DiskVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Time*/, 4 /*float*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
