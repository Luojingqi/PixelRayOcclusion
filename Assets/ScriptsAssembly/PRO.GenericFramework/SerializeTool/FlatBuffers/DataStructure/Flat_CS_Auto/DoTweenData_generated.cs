// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PRO.Flat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DoTweenData_Vector3 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public DoTweenData_Vector3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PRO.Flat.Vector3 EndValue { get { return (new PRO.Flat.Vector3()).__assign(__p.bb_pos + 0, __p.bb); } }
  public float EndTime { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }

  public static Offset<PRO.Flat.DoTweenData_Vector3> CreateDoTweenData_Vector3(FlatBufferBuilder builder, float end_value_X, float end_value_Y, float end_value_Z, float EndTime) {
    builder.Prep(4, 16);
    builder.PutFloat(EndTime);
    builder.Prep(4, 12);
    builder.PutFloat(end_value_Z);
    builder.PutFloat(end_value_Y);
    builder.PutFloat(end_value_X);
    return new Offset<PRO.Flat.DoTweenData_Vector3>(builder.Offset);
  }
}

public struct DoTweenData_Quaternion : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public DoTweenData_Quaternion __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PRO.Flat.Quaternion EndValue { get { return (new PRO.Flat.Quaternion()).__assign(__p.bb_pos + 0, __p.bb); } }
  public float EndTime { get { return __p.bb.GetFloat(__p.bb_pos + 16); } }

  public static Offset<PRO.Flat.DoTweenData_Quaternion> CreateDoTweenData_Quaternion(FlatBufferBuilder builder, float end_value_X, float end_value_Y, float end_value_Z, float end_value_W, float EndTime) {
    builder.Prep(4, 20);
    builder.PutFloat(EndTime);
    builder.Prep(4, 16);
    builder.PutFloat(end_value_W);
    builder.PutFloat(end_value_Z);
    builder.PutFloat(end_value_Y);
    builder.PutFloat(end_value_X);
    return new Offset<PRO.Flat.DoTweenData_Quaternion>(builder.Offset);
  }
}


}
