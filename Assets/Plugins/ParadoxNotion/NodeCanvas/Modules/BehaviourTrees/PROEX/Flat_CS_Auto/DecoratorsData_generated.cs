// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PRO.BT.Flat
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TimeoutData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TimeoutData GetRootAsTimeoutData(ByteBuffer _bb) { return GetRootAsTimeoutData(_bb, new TimeoutData()); }
  public static TimeoutData GetRootAsTimeoutData(ByteBuffer _bb, TimeoutData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TimeoutData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float TimeOut { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<PRO.BT.Flat.TimeoutData> CreateTimeoutData(FlatBufferBuilder builder,
      float time_out = 0.0f) {
    builder.StartTable(1);
    TimeoutData.AddTimeOut(builder, time_out);
    return TimeoutData.EndTimeoutData(builder);
  }

  public static void StartTimeoutData(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddTimeOut(FlatBufferBuilder builder, float timeOut) { builder.AddFloat(0, timeOut, 0.0f); }
  public static Offset<PRO.BT.Flat.TimeoutData> EndTimeoutData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PRO.BT.Flat.TimeoutData>(o);
  }
}


static public class TimeoutDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*TimeOut*/, 4 /*float*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
